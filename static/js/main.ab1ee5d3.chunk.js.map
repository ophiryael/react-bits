{"version":3,"sources":["navigation/NavMenu.tsx","navigation/AppRoutes.tsx","portal/PortalChild.tsx","portal/PortalParent.tsx","common/Spinner.tsx","code-splitting/ErrorBoundary.tsx","code-splitting/HelloThere.tsx","debug-value-hook/DebugValueHook.tsx","simple-reducer-hook/SimpleReducerHook.tsx","profiler-api-output/ProfilerOutput.tsx","profiler-api-output/NodesToRenderForm.tsx","profiler-api-output/ProfiledNodesRenderer.tsx","profiler-api-output/ProfilerApiOutput.tsx","strict-vs-regular-mode/Counter.tsx","strict-vs-regular-mode/StrictVsRegularMode.tsx","imperative-handle-hook/Input.tsx","imperative-handle-hook/ImperativeHandleHook.tsx","layout-vs-regular-effect/EffectHookDemo.tsx","layout-vs-regular-effect/useVariedEffect.ts","layout-vs-regular-effect/LayoutVsRegularEffect.tsx","App.tsx","debug-value-hook/useDelayedMessage.ts","index.tsx"],"names":["StyledNavLink","styled","NavLink","NavMenu","routes","map","route","key","path","to","name","AppRoutes","Component","PortalChild","clickCount","regularChildEl","ReactDOM","createPortal","Container","rotate","keyframes","Spinner","ErrorBoundary","props","state","hasError","this","children","React","GeneralKenobi","lazy","Promise","resolve","setTimeout","initialCounter","count","counterReducer","action","type","OutputContainer","ProfilerOutput","profilerOutput","open","JSON","stringify","Form","NodesToRenderForm","setNumOfNodesToRender","inputRef","useRef","onSubmit","event","preventDefault","current","value","htmlFor","ref","id","min","orderedProfilerParamNames","ProfiledNodesRenderer","memo","numOfNodesToRender","setProfilerOutput","onRender","args","reduce","output","paramName","i","Array","from","_","Counter","title","useState","setClickCount","renderCount","onClick","prevCount","Input","forwardRef","_props","useImperativeHandle","customFocus","document","focus","Title","INITIAL_TEXT","EffectHookDemo","effectHandler","effectType","text","setText","ms","endTime","Date","now","busyWait","useEffect","useLayoutEffect","setRegularChildEl","el","isResponseVisible","setIsResponseVisible","prevIsVisible","fallback","message","setMessage","timeoutId","clearTimeout","useDebugValue","useDelayedMessage","useReducer","counterState","counterDispatch","StrictMode","App","render","getElementById"],"mappings":"2ZASA,IAAMA,EAAgBC,YAAOC,IAAPD,CAAH,KASNE,EAA2B,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACtC,6BACE,4BACGA,EAAOC,KAAI,SAAAC,GAAK,OACf,wBAAIC,IAAKD,EAAME,MACb,kBAACR,EAAD,CAAeS,GAAIH,EAAME,MAAOF,EAAMI,a,OCfnCC,EAA6B,SAAC,GAAD,IAAGP,EAAH,EAAGA,OAAH,OACxC,kBAAC,IAAD,KACGA,EAAOC,KAAI,gBAAGG,EAAH,EAAGA,KAAMI,EAAT,EAASA,UAAT,OACV,kBAAC,IAAD,CAAOL,IAAKC,EAAMA,KAAMA,GACtB,kBAACI,EAAD,Y,OCJKC,EAA+B,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,WAAYC,EAAqB,EAArBA,eACzD,OAAKA,EAGEC,IAASC,aACd,iCACE,iDACA,yCAAeH,IAEjBC,GAPO,M,4LCNX,IAAMG,EAAYjB,YAAO,MAAPA,CAAH,K,0ZCFf,IAAMkB,EAASC,YAAH,KAUCC,EAAUpB,YAAO,MAAPA,CAAH,IAOLkB,G,gCCTFG,EAAb,kDACE,WAAYC,GAAe,IAAD,8BACxB,cAAMA,IACDC,MAAQ,CAAEC,UAAU,GAFD,EAD5B,qDAWI,OAAIC,KAAKF,MAAMC,SACN,wEAEFC,KAAKH,MAAMI,YAdtB,kDAOI,MAAO,CAAEF,UAAU,OAPvB,GAAmCG,IAAMhB,W,yICLzC,IAAMM,EAAYjB,YAAO,MAAPA,CAAH,KAST4B,EAAgBD,IAAME,MAAK,WAC/B,OAAO,IAAIC,SAAQ,SAAAC,GACjBC,YAAW,kBAAMD,EAAQ,gCAAmC,W,wFCXhE,IAAMd,EAAYjB,YAAO,MAAPA,CAAH,K,qLCFf,IAAMiB,EAAYjB,YAAO,MAAPA,CAAH,KAeTiC,EAAiB,CAAEC,MAAO,GAEhC,SAASC,EAAeZ,EAAqBa,GAC3C,OAAQA,EAAOC,MACb,IAAK,WACH,MAAO,CAAEH,MAAOX,EAAMW,MAAQ,GAChC,IAAK,WACH,MAAO,CAAEA,MAAOX,EAAMW,MAAQ,GAChC,IAAK,QACH,OAAOD,EACT,QACE,OAAOV,G,4FCrBb,IAAMe,EAAkBtC,YAAO,MAAPA,CAAH,KAIRuC,EAAkC,SAAC,GAAD,IAAGC,EAAH,EAAGA,eAAH,OAC7C,6BAASC,MAAI,GACX,oDACA,kBAACH,EAAD,KAAkBI,KAAKC,UAAUH,EAAgB,KAAM,M,2ICR3D,IAAMI,EAAO5C,YAAO,OAAPA,CAAH,KAMG6C,EAAqC,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,sBAC7CC,EAAWC,iBAAgC,MAOjD,OACE,kBAACJ,EAAD,CAAMK,SANa,SAACC,GACpBA,EAAMC,iBACNL,EAAsBC,EAASK,SAAWL,EAASK,QAAQC,MAAQ,QAKjE,2BAAOC,QAAQ,qBAAf,8BACA,2BAAOC,IAAKR,EAAUS,GAAG,oBAAoBnB,KAAK,SAASoB,IAAK,IAChE,4BAAQpB,KAAK,UAAb,Y,gBCjBAqB,EAA4B,CAChC,KACA,QACA,iBACA,eACA,YACA,aACA,gBAGWC,EAAyChC,IAAMiC,MAAK,YAAgD,IAA7CC,EAA4C,EAA5CA,mBAAoBC,EAAwB,EAAxBA,kBAStF,OACE,kBAAC,WAAD,CAAUN,GAAG,gBAAgBO,SATuB,WAAc,IAAD,uBAATC,EAAS,yBAATA,EAAS,gBACjE,IAAMxB,EAAiBkB,EAA0BO,QAC/C,SAACC,EAAQC,EAAWC,GAApB,sBAAgCF,EAAhC,eAAyCC,EAAYH,EAAKI,OAC1D,IAEFN,EAAkBtB,KAKhB,iCACE,0CACCqB,GAAsBQ,MAAMC,KAAKD,MAAMR,IAAqB,SAACU,EAAGH,GAAJ,OAAU,yBAAK9D,IAAK8D,GAAV,SAAoBA,W,qJCxBnG,IAAMnD,EAAYjB,YAAO,MAAPA,CAAH,K,2MCAf,IAAMiB,EAAYjB,YAAO,MAAPA,CAAH,KAUFwE,EAA2B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAAY,EACjBC,mBAAiB,GADA,mBAC9C7D,EAD8C,KAClC8D,EADkC,KAE/CC,EAAc5B,iBAAe,GAGnC,OADA4B,EAAYxB,UAEV,kBAAC,EAAD,KACE,6BAAMqB,GACN,4BAAQI,QAAS,kBAAMF,GAAc,SAAAG,GAAS,OAAIA,EAAY,OAA9D,SACA,6CAAmBjE,GACnB,8CAAoB+D,EAAYxB,W,yJCvBtC,IAAMnC,EAAYjB,YAAO,MAAPA,CAAH,KCFF+E,GAAQpD,IAAMqD,YAAW,SAACC,EAAQ1B,GAC7C,IAAMR,EAAWC,iBAAgC,MASjD,OAPAkC,8BAAoB3B,GAAK,iBAAO,CAC9B4B,YAAa,WAAO,IAAD,IACjBC,SAASX,OAAQ,UAAA1B,EAASK,eAAT,eAAkBC,QAAS,UAC5C,UAAAN,EAASK,eAAT,SAAkBiC,aAIf,2BAAO9B,IAAKR,O,0FCRrB,IAAM9B,GAAYjB,YAAO,MAAPA,CAAH,M,mSCKf,IAAMiB,GAAYjB,YAAO,MAAPA,CAAH,MAUTsF,GAAQtF,YAAO,MAAPA,CAAH,MAILuF,GAAe,wCAOd,IAAMC,GAAkC,SAAC,GAA2B,IC3BzBC,ED2BAhB,EAAwB,EAAxBA,MAAOiB,EAAiB,EAAjBA,WAAiB,EAChDhB,mBAASa,IADuC,mBACjEI,EADiE,KAC3DC,EAD2D,KAUxE,OCrCgDH,ED8BpB,WACtBE,IAASJ,KATjB,SAAkBM,GAEhB,IADA,IAAMC,EAAUC,KAAKC,MAAQH,EACtBE,KAAKC,MAAQF,KAQhBG,CAAS,KACTL,EAAQ,mBChCmB,YD6BfF,EC7B2BQ,YAAYC,mBACzCV,GDoCZ,kBAAC,GAAD,KACE,kBAACH,GAAD,KAAQb,GACR,6BAAMkB,GACN,4BAAQd,QAAS,kBAAMe,EAAQL,MAA/B,W,uJExCN,IAAMtE,GAAYjB,YAAO,MAAPA,CAAH,MCUTG,GAAqB,CACzB,CAAEI,KAAM,UAAWE,KAAM,SAAUE,UjBDC,WAAO,IAAD,EACN+D,mBAAS,GADH,mBACnC7D,EADmC,KACvB8D,EADuB,OAEED,mBAAgC,MAFlC,mBAEnC5D,EAFmC,KAEnBsF,EAFmB,KAI1C,OACE,kBAACnF,EAAD,KACE,4BAAQ4D,QAAS,kBAAMF,GAAc,SAAAG,GAAS,OAAIA,EAAY,OAA9D,SACA,yBAAKvB,IAAK,SAAA8C,GAAE,OAAID,EAAkBC,KAAlC,iBACA,kBAAC,EAAD,CAAaxF,WAAYA,EAAYC,eAAgBA,OiBNzD,CAAEP,KAAM,kBAAmBE,KAAM,iBAAkBE,UdIjB,WAAO,IAAD,EACU+D,oBAAkB,GAD5B,mBACjC4B,EADiC,KACdC,EADc,KAGxC,OACE,kBAAC,EAAD,KACE,4BAAQ1B,QAAS,kBAAM0B,GAAqB,SAAAC,GAAa,OAAKA,OAC3DF,EAAoB,gBAAkB,iBAEzC,8CAEGA,GACC,kBAAC,EAAD,KACE,kBAAC,WAAD,CAAUG,SAAU,kBAACrF,EAAD,OAClB,kBAACQ,EAAD,YchBZ,CAAErB,KAAM,mBAAoBE,KAAM,kBAAmBE,UbRf,WACtC,IAAM+F,EcRyB,WAAO,IAAD,EACPhC,mBAAwB,MADjB,mBAC9BgC,EAD8B,KACrBC,EADqB,KAYrC,OATAT,qBAAU,WACR,IAAMU,EAAY5E,YAAW,WAC3B2E,EAAW,uBACV,KACH,OAAO,kBAAME,aAAaD,MACzB,IAEHE,wBAAcJ,EAAU,cAAgB,mBAEjCA,EdJSK,GAChB,OAAO,kBAAC,EAAD,wBAAqBL,QAArB,IAAqBA,IAAW,kBAACtF,EAAD,SaOvC,CAAEb,KAAM,uBAAwBE,KAAM,sBAAuBE,URHpB,WAAO,IAAD,EACK+D,mBAAwB,MAD7B,mBACxCb,EADwC,KACpBf,EADoB,OAEH4B,mBAAiC,MAF9B,mBAExClC,EAFwC,KAExBsB,EAFwB,KAI/C,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,CAAmBhB,sBAAuBA,IACzCN,GAAkB,kBAAC,EAAD,CAAgBA,eAAgBA,IACnD,kBAACmB,EAAD,CAAuBE,mBAAoBA,EAAoBC,kBAAmBA,OQJtF,CAAEvD,KAAM,uBAAwBE,KAAM,sBAAuBE,UZcpB,WAAO,IAAD,EACPqG,qBAAW7E,EAAgBF,GADpB,mBACxCgF,EADwC,KAC1BC,EAD0B,KAG/C,OACE,kBAAC,EAAD,KACE,uCAAaD,EAAa/E,OAC1B,4BAAQ2C,QAAS,kBAAMqC,EAAgB,CAAE7E,KAAM,eAA/C,MACA,4BAAQwC,QAAS,kBAAMqC,EAAgB,CAAE7E,KAAM,eAA/C,MACA,4BAAQwC,QAAS,kBAAMqC,EAAgB,CAAE7E,KAAM,YAA/C,YYrBJ,CAAE9B,KAAM,yBAA0BE,KAAM,wBAAyBE,UJRrB,WAC5C,IAAM4C,EAAMP,iBAAyB,MAMrC,OACE,kBAAC,GAAD,KACE,kBAAC+B,GAAD,CAAOxB,IAAKA,IACZ,4BAAQsB,QAPQ,WAAO,IAAD,EACxB,UAAAtB,EAAIH,eAAJ,SAAa+B,gBAMX,YIDJ,CAAE5E,KAAM,0BAA2BE,KAAM,yBAA0BE,UNTxB,kBAC3C,kBAAC,EAAD,KACE,kBAAC,IAAMwG,WAAP,KACE,kBAAC,EAAD,CAAS1C,MAAM,iBAEjB,kBAAC,EAAD,CAASA,MAAM,oBMKjB,CAAElE,KAAM,4BAA6BE,KAAM,2BAA4BE,UDVpC,kBACnC,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAgB8D,MAAM,YAAYiB,WAAW,YAC7C,kBAAC,GAAD,CAAgBjB,MAAM,kBAAkBiB,WAAW,eCU1C0B,GAAM,kBACjB,kBAAC,IAAD,KACE,kBAAC,EAAD,CAASjH,OAAQA,KACjB,kBAAC,EAAD,CAAWA,OAAQA,OEvBvBY,IAASsG,OAAO,kBAAC,GAAD,MAASjC,SAASkC,eAAe,W","file":"static/js/main.ab1ee5d3.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\nimport { AppRoute } from './interfaces';\n\ninterface Props {\n  routes: AppRoute[];\n}\n\nconst StyledNavLink = styled(NavLink)`\n  color: inherit;\n  text-decoration: none;\n\n  &.active {\n    text-decoration: underline;\n  }\n`;\n\nexport const NavMenu: React.FC<Props> = ({ routes }) => (\n  <nav>\n    <ul>\n      {routes.map(route => (\n        <li key={route.path}>\n          <StyledNavLink to={route.path}>{route.name}</StyledNavLink>\n        </li>\n      ))}\n    </ul>\n  </nav>\n);\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { AppRoute } from './interfaces';\n\ninterface Props {\n  routes: AppRoute[];\n}\n\nexport const AppRoutes: React.FC<Props> = ({ routes }) => (\n  <Switch>\n    {routes.map(({ path, Component }) => (\n      <Route key={path} path={path}>\n        <Component />\n      </Route>\n    ))}\n  </Switch>\n);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\ninterface Props {\n  clickCount: number;\n  regularChildEl: HTMLDivElement | null;\n}\n\nexport const PortalChild: React.FC<Props> = ({ clickCount, regularChildEl }) => {\n  if (!regularChildEl) {\n    return null;\n  }\n  return ReactDOM.createPortal(\n    <details>\n      <summary>Portal child</summary>\n      <span>Clicks: {clickCount}</span>\n    </details>,\n    regularChildEl\n  );\n};\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { PortalChild } from './PortalChild';\n\nconst Container = styled('div')`\n  margin-top: 25px;\n  text-align: center;\n\n  & > button {\n    padding: 5px 10px;\n    margin-bottom: 25px;\n  }\n`;\n\nexport const PortalParent: React.FC = () => {\n  const [clickCount, setClickCount] = useState(0);\n  const [regularChildEl, setRegularChildEl] = useState<HTMLDivElement | null>(null);\n\n  return (\n    <Container>\n      <button onClick={() => setClickCount(prevCount => prevCount + 1)}>CLICK</button>\n      <div ref={el => setRegularChildEl(el)}>Regular child</div>\n      <PortalChild clickCount={clickCount} regularChildEl={regularChildEl} />\n    </Container>\n  );\n};\n","import styled, { keyframes } from 'styled-components';\n\nconst rotate = keyframes`\n  from {\n    transform: rotate(0deg)\n  }\n\n  to {\n    transform: rotate(360deg);\n  }\n`;\n\nexport const Spinner = styled('div')`\n  display: inline-block;\n  height: 10px;\n  width: 10px;\n  border: 2px solid #6e7078;\n  border-top-color: #fff;\n  border-radius: 50%;\n  animation: ${rotate} 1s linear infinite;\n`;\n","import React from 'react';\n\ninterface Props {\n  children: React.ReactNode;\n}\n\ninterface State {\n  hasError: boolean;\n}\n\nexport class ErrorBoundary extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError() {\n    return { hasError: true };\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return <span>Oops, seems like there was an error...</span>;\n    }\n    return this.props.children;\n  }\n}\n","import React, { useState, Suspense } from 'react';\nimport styled from 'styled-components';\nimport { Spinner } from '../common/Spinner';\nimport { ErrorBoundary } from './ErrorBoundary';\n\nconst Container = styled('div')`\n  margin: 25px;\n\n  & > button {\n    margin-bottom: 15px;\n  }\n`;\n\n// Added delay for spinner animation\nconst GeneralKenobi = React.lazy(() => {\n  return new Promise(resolve => {\n    setTimeout(() => resolve(import('./GeneralKenobi') as any), 750);\n  });\n});\n\nexport const HelloThere: React.FC = () => {\n  const [isResponseVisible, setIsResponseVisible] = useState<boolean>(false);\n\n  return (\n    <Container>\n      <button onClick={() => setIsResponseVisible(prevIsVisible => !prevIsVisible)}>\n        {isResponseVisible ? 'Hide response' : 'Show response'}\n      </button>\n      <div>\n        Hello there...\n        {isResponseVisible && (\n          <ErrorBoundary>\n            <Suspense fallback={<Spinner />}>\n              <GeneralKenobi />\n            </Suspense>\n          </ErrorBoundary>\n        )}\n      </div>\n    </Container>\n  );\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Spinner } from '../common/Spinner';\nimport { useDelayedMessage } from './useDelayedMessage';\n\nconst Container = styled('div')`\n  margin: 25px;\n`;\n\nexport const DebugValueHook: React.FC = () => {\n  const message = useDelayedMessage();\n  return <Container>Message: {message ?? <Spinner />}</Container>;\n};\n","import React, { useReducer } from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled('div')`\n  margin: 25px;\n\n  & > div {\n    margin-bottom: 20px;\n  }\n\n  & > button {\n    padding: 5px 10px;\n  }\n`;\n\ntype CounterState = { count: number };\ntype CounterAction = { type: 'INCREASE' | 'DECREASE' | 'RESET' };\n\nconst initialCounter = { count: 0 };\n\nfunction counterReducer(state: CounterState, action: CounterAction): CounterState {\n  switch (action.type) {\n    case 'INCREASE':\n      return { count: state.count + 1 };\n    case 'DECREASE':\n      return { count: state.count - 1 };\n    case 'RESET':\n      return initialCounter;\n    default:\n      return state;\n  }\n}\n\nexport const SimpleReducerHook: React.FC = () => {\n  const [counterState, counterDispatch] = useReducer(counterReducer, initialCounter);\n\n  return (\n    <Container>\n      <div>Count: {counterState.count}</div>\n      <button onClick={() => counterDispatch({ type: 'INCREASE' })}>+1</button>\n      <button onClick={() => counterDispatch({ type: 'DECREASE' })}>-1</button>\n      <button onClick={() => counterDispatch({ type: 'RESET' })}>Reset</button>\n    </Container>\n  );\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport { ProfilerOutput as IProfilerOutput } from './interfaces';\n\ninterface Props {\n  profilerOutput: IProfilerOutput;\n}\n\nconst OutputContainer = styled('div')`\n  white-space: pre;\n`;\n\nexport const ProfilerOutput: React.FC<Props> = ({ profilerOutput }) => (\n  <details open>\n    <summary>Profiler output</summary>\n    <OutputContainer>{JSON.stringify(profilerOutput, null, 4)}</OutputContainer>\n  </details>\n);\n","import React, { useRef } from 'react';\nimport styled from 'styled-components';\n\ninterface Props {\n  setNumOfNodesToRender: (numOfNodesToRender: number | null) => void;\n}\n\nconst Form = styled('form')`\n  display: flex;\n  flex-direction: column;\n  width: fit-content;\n`;\n\nexport const NodesToRenderForm: React.FC<Props> = ({ setNumOfNodesToRender }) => {\n  const inputRef = useRef<HTMLInputElement | null>(null);\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>): void => {\n    event.preventDefault();\n    setNumOfNodesToRender(inputRef.current ? +inputRef.current.value : null);\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <label htmlFor=\"nodes-count-input\">Number of nodes to render:</label>\n      <input ref={inputRef} id=\"nodes-count-input\" type=\"number\" min={1} />\n      <button type=\"submit\">Render</button>\n    </Form>\n  );\n};\n","import React, { Profiler, ProfilerOnRenderCallback } from 'react';\nimport { ProfilerOutput } from './interfaces';\n\ninterface Props {\n  numOfNodesToRender: number | null;\n  setProfilerOutput: (profilerOutput: ProfilerOutput) => void;\n}\n\nconst orderedProfilerParamNames = [\n  'id',\n  'phase',\n  'actualDuration',\n  'baseDuration',\n  'startTime',\n  'commitTime',\n  'interactions',\n];\n\nexport const ProfiledNodesRenderer: React.FC<Props> = React.memo(({ numOfNodesToRender, setProfilerOutput }) => {\n  const handleProfilerEvent: ProfilerOnRenderCallback = (...args) => {\n    const profilerOutput = orderedProfilerParamNames.reduce(\n      (output, paramName, i) => ({ ...output, [paramName]: args[i] }),\n      {} as ProfilerOutput\n    );\n    setProfilerOutput(profilerOutput);\n  };\n\n  return (\n    <Profiler id=\"NodesRenderer\" onRender={handleProfilerEvent}>\n      <details>\n        <summary>Nodes</summary>\n        {numOfNodesToRender && Array.from(Array(numOfNodesToRender), (_, i) => <div key={i}>Node #{i}</div>)}\n      </details>\n    </Profiler>\n  );\n});\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { ProfilerOutput } from './ProfilerOutput';\nimport { NodesToRenderForm } from './NodesToRenderForm';\nimport { ProfiledNodesRenderer } from './ProfiledNodesRenderer';\nimport { ProfilerOutput as IProfilerOutput } from './interfaces';\n\nconst Container = styled('div')`\n  margin: 25px;\n\n  & > *:not(:last-child) {\n    margin-bottom: 15px;\n  }\n`;\n\nexport const ProfilerApiOutput: React.FC = () => {\n  const [numOfNodesToRender, setNumOfNodesToRender] = useState<number | null>(null);\n  const [profilerOutput, setProfilerOutput] = useState<IProfilerOutput | null>(null);\n\n  return (\n    <Container>\n      <NodesToRenderForm setNumOfNodesToRender={setNumOfNodesToRender} />\n      {profilerOutput && <ProfilerOutput profilerOutput={profilerOutput} />}\n      <ProfiledNodesRenderer numOfNodesToRender={numOfNodesToRender} setProfilerOutput={setProfilerOutput} />\n    </Container>\n  );\n};\n","import React, { useState, useRef } from 'react';\nimport styled from 'styled-components';\n\ninterface Props {\n  title: string;\n}\n\nconst Container = styled('div')`\n  padding: 15px;\n  text-align: center;\n  border: 1px solid #f8f9fa;\n\n  & > *:not(:last-child) {\n    margin-bottom: 25px;\n  }\n`;\n\nexport const Counter: React.FC<Props> = ({ title }) => {\n  const [clickCount, setClickCount] = useState<number>(0);\n  const renderCount = useRef<number>(0);\n\n  renderCount.current++;\n  return (\n    <Container>\n      <div>{title}</div>\n      <button onClick={() => setClickCount(prevCount => prevCount + 1)}>Click</button>\n      <div>Click count: {clickCount}</div>\n      <div>Render count: {renderCount.current}</div>\n    </Container>\n  );\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Counter } from './Counter';\n\nconst Container = styled('div')`\n  margin: 25px 25px 0;\n\n  & > div:first-child {\n    margin-bottom: 25px;\n  }\n`;\n\nexport const StrictVsRegularMode: React.FC = () => (\n  <Container>\n    <React.StrictMode>\n      <Counter title=\"Strict Mode\" />\n    </React.StrictMode>\n    <Counter title=\"Regular Mode\" />\n  </Container>\n);\n","import React, { useRef, useImperativeHandle } from 'react';\n\nexport const Input = React.forwardRef((_props, ref) => {\n  const inputRef = useRef<HTMLInputElement | null>(null);\n\n  useImperativeHandle(ref, () => ({\n    customFocus: () => {\n      document.title = inputRef.current?.value || 'Focused';\n      inputRef.current?.focus();\n    },\n  }));\n\n  return <input ref={inputRef} />;\n});\n","import React, { useRef } from 'react';\nimport styled from 'styled-components';\nimport { Input } from './Input';\n\nconst Container = styled('div')`\n  margin: 25px;\n`;\n\ninterface CustomRef {\n  customFocus: () => void;\n}\n\nexport const ImperativeHandleHook: React.FC = () => {\n  const ref = useRef<CustomRef | null>(null);\n\n  const handleFocus = () => {\n    ref.current?.customFocus();\n  };\n\n  return (\n    <Container>\n      <Input ref={ref} />\n      <button onClick={handleFocus}>Focus</button>\n    </Container>\n  );\n};\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { useVariedEffect } from './useVariedEffect';\n\ninterface Props {\n  title: string;\n  effectType: 'regular' | 'layout';\n}\n\nconst Container = styled('div')`\n  padding: 20px;\n  border: 1px solid #fff;\n  text-align: center;\n\n  & > div {\n    margin-bottom: 10px;\n  }\n`;\n\nconst Title = styled('div')`\n  text-decoration: underline;\n`;\n\nconst INITIAL_TEXT = 'This is a very very long initial text';\n\nfunction busyWait(ms: number) {\n  const endTime = Date.now() + ms;\n  while (Date.now() < endTime) {}\n}\n\nexport const EffectHookDemo: React.FC<Props> = ({ title, effectType }) => {\n  const [text, setText] = useState(INITIAL_TEXT);\n\n  useVariedEffect(effectType, () => {\n    if (text === INITIAL_TEXT) {\n      busyWait(150);\n      setText('Updated text');\n    }\n  });\n\n  return (\n    <Container>\n      <Title>{title}</Title>\n      <div>{text}</div>\n      <button onClick={() => setText(INITIAL_TEXT)}>Reset</button>\n    </Container>\n  );\n};\n","import { useEffect, useLayoutEffect } from 'react';\nimport { EffectType } from './interfaces';\n\nexport const useVariedEffect = (type: EffectType, effectHandler: () => void) => {\n  const useEffectHook = type === 'regular' ? useEffect : useLayoutEffect;\n  useEffectHook(effectHandler);\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport { EffectHookDemo } from './EffectHookDemo';\n\nconst Container = styled('div')`\n  margin: 25px;\n\n  & > *:not(:last-child) {\n    margin-bottom: 15px;\n  }\n`;\n\nexport const LayoutVsRegularEffect = () => (\n  <Container>\n    <EffectHookDemo title=\"useEffect\" effectType=\"regular\" />\n    <EffectHookDemo title=\"useLayoutEffect\" effectType=\"layout\" />\n  </Container>\n);\n","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport { NavMenu } from './navigation/NavMenu';\nimport { AppRoutes } from './navigation/AppRoutes';\nimport { AppRoute } from './navigation/interfaces';\nimport { PortalParent } from './portal/PortalParent';\nimport { HelloThere } from './code-splitting/HelloThere';\nimport { DebugValueHook } from './debug-value-hook/DebugValueHook';\nimport { SimpleReducerHook } from './simple-reducer-hook/SimpleReducerHook';\nimport { ProfilerApiOutput } from './profiler-api-output/ProfilerApiOutput';\nimport { StrictVsRegularMode } from './strict-vs-regular-mode/StrictVsRegularMode';\nimport { ImperativeHandleHook } from './imperative-handle-hook/ImperativeHandleHook';\nimport { LayoutVsRegularEffect } from './layout-vs-regular-effect/LayoutVsRegularEffect';\n\nconst routes: AppRoute[] = [\n  { path: '/portal', name: 'Portal', Component: PortalParent },\n  { path: '/code-splitting', name: 'Code Splitting', Component: HelloThere },\n  { path: '/use-debug-value', name: 'Use Debug Value', Component: DebugValueHook },\n  { path: '/profiler-api-output', name: 'Profiler API Output', Component: ProfilerApiOutput },\n  { path: '/simple-reducer-hook', name: 'Simple Reducer Hook', Component: SimpleReducerHook },\n  { path: '/use-imperative-handle', name: 'Use Imperative Handle', Component: ImperativeHandleHook },\n  { path: '/strict-vs-regular-mode', name: 'Strict vs Regular Mode', Component: StrictVsRegularMode },\n  { path: '/layout-vs-regular-effect', name: 'Layout vs Regular Effect', Component: LayoutVsRegularEffect },\n];\n\nexport const App = () => (\n  <BrowserRouter>\n    <NavMenu routes={routes} />\n    <AppRoutes routes={routes} />\n  </BrowserRouter>\n);\n","import { useState, useEffect, useDebugValue } from 'react';\n\nexport const useDelayedMessage = () => {\n  const [message, setMessage] = useState<string | null>(null);\n\n  useEffect(() => {\n    const timeoutId = setTimeout(() => {\n      setMessage('This is a message');\n    }, 3000);\n    return () => clearTimeout(timeoutId);\n  }, []);\n\n  useDebugValue(message ? 'Message set' : 'Message not set');\n\n  return message;\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}